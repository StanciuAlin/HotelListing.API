// <auto-generated />
using HotelListing.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelListing.Api.Migrations
{
    [DbContext(typeof(HotelListingAPIDbContext))]
    partial class HotelListingAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelListing.Api.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jamaica",
                            ShortName = "JM"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bahamas",
                            ShortName = "BS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cayman Islands",
                            ShortName = "CI"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Antigua and Barbuda",
                            ShortName = "AB"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Barbados",
                            ShortName = "BB"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Trinidad and Tobago",
                            ShortName = "TT"
                        },
                        new
                        {
                            Id = 7,
                            Name = "St. Lucia",
                            ShortName = "LC"
                        },
                        new
                        {
                            Id = 8,
                            Name = "St. Kitts and Nevis",
                            ShortName = "KN"
                        },
                        new
                        {
                            Id = 9,
                            Name = "St. Vincent and the Grenadines",
                            ShortName = "VC"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Grenada",
                            ShortName = "GD"
                        });
                });

            modelBuilder.Entity("HotelListing.Api.Data.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Negril",
                            CountryId = 1,
                            Name = "Sandals Resort and Spa",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 2,
                            Address = "Nassau",
                            CountryId = 2,
                            Name = "Grand Palladium",
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "Grand Cayman",
                            CountryId = 3,
                            Name = "Marriott Beach Resort",
                            Rating = 4.2999999999999998
                        },
                        new
                        {
                            Id = 4,
                            Address = "Antigua",
                            CountryId = 4,
                            Name = "Jumby Bay",
                            Rating = 4.7000000000000002
                        },
                        new
                        {
                            Id = 5,
                            Address = "St. James",
                            CountryId = 5,
                            Name = "Sandy Lane",
                            Rating = 4.9000000000000004
                        },
                        new
                        {
                            Id = 6,
                            Address = "Crown Point",
                            CountryId = 6,
                            Name = "Coco Reef Resort",
                            Rating = 4.2000000000000002
                        },
                        new
                        {
                            Id = 7,
                            Address = "Val des Pitons",
                            CountryId = 7,
                            Name = "Sugar Beach",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 8,
                            Address = "St. Kitts",
                            CountryId = 8,
                            Name = "Park Hyatt",
                            Rating = 4.5999999999999996
                        },
                        new
                        {
                            Id = 9,
                            Address = "St. Vincent",
                            CountryId = 9,
                            Name = "Young Island",
                            Rating = 4.4000000000000004
                        });
                });

            modelBuilder.Entity("HotelListing.Api.Data.Hotel", b =>
                {
                    b.HasOne("HotelListing.Api.Data.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelListing.Api.Data.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
